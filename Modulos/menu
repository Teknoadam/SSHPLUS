#!/bin/bash
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -e /usr/lib/sshplus ]] && rm -rf /bin/menu > /dev/null 2>&1
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
IP=$(cat /etc/IP)
x="ok"
menu ()
{
velocity () {
aguarde () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -d /etc/SSHPlus ]] && rm -rf /bin/menu
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
fun_tst () {
speedtest --share > speed
}
echo -e "\033[1;37m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "   \033[1;32mSUNUCU HIZINI TEST ETMEK!\033[0m"
echo -e "\033[1;37m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
bekleyin 'fun_tst'
echo ""
png=$(cat speed | sed -n '5 p' |awk -F : {'print $NF'})
indir=$(cat speed | sed -n '7 p' |awk -F :  {'print $NF'})
yükle=$(cat speed | sed -n '9 p' |awk -F :  {'print $NF'})
lnk=$(cat speed | sed -n '10 p' |awk {'print $NF'})
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32mPING (GEÇİKME):\033[1;37m$png"
echo -e "\033[1;32mİNDİRME:\033[1;37m$indir"
echo -e "\033[1;32mYÜKLEME:\033[1;37m$yükle"
echo -e "\033[1;32mBAĞLANTI: \033[1;36m$lnk\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
rm -rf $HOME/speed
}
# Limiter
fonksiyon sınırla1 () {
   clear
   echo -e "\n\033[1;32mLİMİTER BAŞLATILIYOR... \033[0m"
   echo ""
   fun_bar 'screen -dmS limiter limiter' 'sleep 3'
   [[ $(grep -wc "limiter" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'AÇIK' || screen -dmS limiter limiter" >> /etc/autostart
   } || {
       sed -i '/limiter/d' /etc/autostart
	   echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'AÇIK' || screen -dmS limiter limiter" >> /etc/autostart
   }
   echo -e "\n\033[1;32m LİMİTER ETKİNLEŞTİRİLDİ !\033[0m"
   sleep 3
   menu
}
fonksiyon sınırla2 () {
   clear
   echo -e "\033[1;32mLİMİTER DURDURULUYOR... \033[0m"
   echo ""
   fun_stplimiter () {
      sleep 1
      screen -r -S "limiter" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "limiter" /etc/autostart) != '0' ]] && {
          sed -i '/limiter/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stplimiter' 'sleep 3'
   echo -e "\n\033[1;31m LİMİTER DURDURULDU !\033[0m"
   sleep 3
   menu
}
function limit_ssh () {
[[ $(ps x | grep "limiter"|grep -v grep |wc -l) = '0' ]] && limit1 || limit2
}
#onlineapp
fonksiyon onapp1 () {
   clear
   echo -e "\n\033[1;32mONLİNE UYGULAMA BAŞLATILIYOR... \033[0m"
   echo ""
   apt install apache2 -y > /dev/null 2>&1
   sed -i "s/Listen 80/Listen 8888/g" /etc/apache2/ports.conf >/dev/null 2>&1
   servis apache2 yeniden başlat
   rm -rf /var/www/html/server >/dev/null 2>&1
   mkdir /var/www/html/server >/dev/null 2>&1
   fun_bar 'screen -dmS onlineapp onlineapp' 'sleep 3'
   [[ $(grep -wc "onlineapp" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'onlineapp' | grep -v 'grep' && echo 'AÇIK' || screen -dmS onlineapp onlineapp" >> /etc/autostart
   } || {
       sed -i '/onlineapp/d' /etc/autostart
	   echo -e "ps x | grep 'onlineapp' | grep -v 'grep' && echo 'AÇIK' || screen -dmS onlineapp onlineapp" >> /etc/autostart
   }
   IP=$(wget -qO- ipv4.icanhazip.com) >/dev/null 2>&1
   echo -e "\n\033[1;32m  ONLİNE UYGULAMA ETKİNLEŞTİRİLDİ !\033[0m"
   echo -e "\033[1;31m \033[1;33mKullanmak İçin Çevrimiçi Kullanıcı URL'si\033[0m"
   echo -e " http://$IP:8888/server/online"
   sleep 10
   menu
}
fonksiyon onapp2 () {
   clear
   echo -e "\033[1;32mONLİNE UYGULAMAYI KAPATIYOR... \033[0m"
   echo ""
   fun_stponlineapp () {
      sleep 1
      screen -r -S "onlineapp" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "onlineapp" /etc/autostart) != '0' ]] && {
          sed -i '/onlineapp/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stponlineapp' 'sleep 3'
   rm -rf /var/www/html/server >/dev/null 2>&1
   echo -e "\n\033[1;31m ONLİNE UYGULAMA KAPATILDI !\033[0m"
   sleep 3
   menu
}

fonksiyon onapp_ssh () {
[[ $(ps x | grep "onlineapp"|grep -v grep |wc -l) = '0' ]] && onapp1 || onapp2
}
##
fonksiyon autoexec () {
   if grep "menu;" /etc/profile > /dev/null; then
      clear
      echo -e "\033[1;32mOTOMATİK BAŞLATMA DEVRE DIŞI BIRAKILIYOR\033[0m"
      offautmenu () {
         sed -i '/menu;/d' /etc/profile
      }
      echo ""
      fun_bar 'offautmenu'
      echo ""
      echo -e "\033[1;31mOTOMATİK BAŞLATMA DEVRE DIŞI BIRAKILDI!\033[0m"
      sleep 1.5s
      menu2
   else
      clear
      echo -e "\033[1;32mOTOMATİK BAŞLATMA AKTİF EDİLİYOR\033[0m"
      autmenu () {
         grep -v "^menu;" /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile
         echo "menu;" >> /etc/profile
      }
      echo ""
      fun_bar 'autmenu'
      echo ""
      echo -e "\033[1;32mOTOMATİK BAŞLATMA AKTİF EDİLDİ!\033[0m"
      sleep 1.5s
      menu2
   fi
   
}
#menu2 () {
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32m(AÇIK◉) ") || stsf=$(echo -e "\033[1;31m(KAPALI) ")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;32m(AÇIK◉) " || echo -e "\033[1;31m(KAPALI) ")
stsbotteste=$(ps x | grep "bot_teste"|grep -v grep > /dev/null && echo -e "\033[1;32m(AÇIK◉) " || echo -e "\033[1;31m(KAPALI) ")
stsbotrev=$(ps x | grep "bot_rev"|grep -v grep > /dev/null && echo -e "\033[1;32m(AÇIK◉) " || echo -e "\033[1;31m(KAPALI) ")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;32m(AÇIK◉) " || echo -e "\033[1;31m(KAPALI) ")
[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-5s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-5s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-10s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(printf '%-5s' "$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)")
swap1=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $2'})")
swap2=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $4'})")
swap3=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $3'})")
clear
echo -e "\033[1;31m╔════════════════════════════════════════════════════════════╗\033[0m"
echo -e "\033[1;31m║ \E[5;34;47m                 SSH-PLUS @SWITTECNOLOGIA                   \E[0m \033[1;31m║"
echo -e "\033[1;31m╠════════════════════╦═══════════════════╦═══════════════════╣\033[0m"
echo -e "\033[1;31m║  \033[1;32mSİSTEM           \033[1;31m║  \033[1;32mRAM      \033[1;31m║ \033[1;32m İŞLEMCİ      \033[1;31m║"
echo -e "\033[1;31m║  \033[1;36mOS: \033[1;37m$_system    \033[1;31m║  \033[1;36mToplam:\033[1;37m$_ram \033[1;31m║  \033[1;36mÇekirdekler: \033[1;37m$_core\033[0m   \033[1;31m║"
echo -e "\033[1;31m║  \033[1;36mSaat: \033[1;37m$_hora    \033[1;31m║  \033[1;36mKullanılıyor: \033[1;37m$_usor \033[1;31m║  \033[1;36mKullanılabilir: \033[1;37m$_usop\033[0m    \033[1;31m║"
echo -e "\033[1;31m╠════════════════════╬═══════════════════╬═══════════════════╣\033[0m"
[[ ! -e /tmp/att ]]  && {
    echo -e "\033[1;31m║  \033[1;32mÇevrimiçi:\033[1;37m $_onlin    \033[1;31m║  \033[1;32mSüresi Dolan: \033[1;37m$_userexp \033[1;31m║  \033[1;32mToplam: \033[1;37m$_tuser\033[0m     \033[1;31m║"
    var01='\033[1;37m•'
} || {
    echo -e "\033[1;31m║         \033[1;33m[\033[1;31m!\033[1;33m]  \033[1;32mGÜNCELLEME MEVCUT  \033[1;33m[\033[1;31m!\033[1;33m]\033[0m        \033[1;31m║"
    var01="\033[1;32m!"
}
echo -e "\033[1;31m╠════════════════════╩═══════════════════╩═══════════════════╣\033[0m"
echo -e "\033[1;31m║  \033[1;32mSWAP BELLEK    \033[1;36mToplam: \033[1;37m$swap1  \033[1;36mKullanılıyor: \033[1;37m$swap3  \033[1;36mBoş: \033[1;37m$swap2 \033[1;31m║"
echo -e "\033[1;31m╠════════════════════════════════════════════════════════════╣\033[0m"
echo -e "\033[1;31m║   [\033[1;36m21\033[1;31m] \033[1;37m• \033[1;33mANAHTAR EKLE \033[1;31m       [\033[1;36m28\033[1;31m] \033[1;37m• \033[1;33mROOT ŞİFRESİNİ DEĞİŞTİR \033[1;31m  \033[1;31m  ║
\033[1;31m║   [\033[1;36m22\033[1;31m] \033[1;37m• \033[1;33mANAHTAR KALDIR \033[1;31m         [\033[1;36m29\033[1;31m] \033[1;37m• \033[1;33mOTOMATİK ÇALIŞTIRMA $autm \033[1;31m║
\033[1;31m║   [\033[1;36m23\033[1;31m] \033[1;37m• \033[1;33mSİSTEMİ YENİDEN BAŞLAT \033[1;31m    [\033[1;36m30\033[1;31m] $var01 \033[1;33mKODU GÜNCELLE \033[1;31m  \033[1;31m  ║
\033[1;31m║   [\033;36m24\033[1;31m] \033[1;37m• \033[1;33mSERVİSLERİ YENİDEN BAŞLAT \033[1;31m   [\033[1;36m31\033[1;31m] \033[1;37m• \033[1;33mKODU KALDIR \033[1;31m  \033[1;31m    ║
\033[1;31m║   [\033[1;36m25\033[1;31m] \033[1;37m• \033[1;33mTORRENT ENGELLE $stsf\033[1;31m  [\033[1;36m32\033[1;31m] \033[1;37m• \033[1;33mTCPTWEAKER       \033[1;31m    \033[1;31m║
\033[1;31m║   [\033[1;36m26\033[1;31m] \033[1;37m• \033[1;33mTELEGRAM BOTU $stsbot\033[1;31m   [\033[1;36m33\033[1;31m] \033[1;37m• \033[1;33mGERİ DÖN \033[1;32m<\033[1;33m<\033[1;31m< \033[1;31m  \033[1;31m        ║
\033[1;31m║   [\033[1;36m27\033[1;31m] \033[1;37m• \033[1;33mTEST BOTU $stsbotteste\033[1;31m      [\033[1;36m00\033[1;31m] \033[1;37m• \033[1;33mÇIKIŞ \033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m  \033[1;31m           ║"
echo -e "\033[1;31m╠════════════════════════════════════════════════════════════╝\033[0m"
echo -ne "\033[1;31m╚╣\033[1;32m BİR SEÇENEK BELİRTİN \033[1;33m:"; read x
case "$x" in

   
   menu2 () {
    clear
    addhost
    echo -ne "\n\033[1;31mENTER \033[1;33mgitmek için \033[1;32mMENÜ'ye dön!\033[0m"; read
    menu2
    ;;
22)
    clear
    delhost
    echo -ne "\n\033[1;31mENTER \033[1;33mgitmek için \033[1;32mMENÜ'ye dön!\033[0m"; read
    menu2
    ;;
23)
    clear
    sistemiyenidenbaşlat
    ;;
24)
    clear
    servisleriyenidenbaşlat
    sleep 3
    ;;
25)
    torrengele
    ;;
26)
    botssh
    ;;
27)
    bottestkur
    ;;
28)
    clear
    rootşifresideğiştir
    sleep 3
    ;;
29)
    otomatikçalıştır
    ;;
30)
    kodsürümü
    ;;
31)
    clear
    kodukaldır
    ;;
32)
    clear
    tcptweaker.sh
    ;;
33)
    menü
    ;;
0|00)
    echo -e "\033[1;31mÇıkılıyor...\033[0m"
    sleep 2
    clear
    exit;
    ;;
*)
    echo -e "\n\033[1;31mGeçersiz seçenek!\033[0m"
    sleep 2
esac
}
while true $x != "ok"
do
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "\033[1;32m(AÇIK◉) " || echo -e "\033[1;31m(KAPALI) ")
stson=$(ps x | grep "onlineapp"|grep -v grep > /dev/null && echo -e "\033[1;32m(AÇIK◉) " || echo -e "\033[1;31m(KAPALI) ")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "\033[1;32m(AÇIK◉) " || echo -e "\033[1;31m(KAPALI) ")
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi

_ons=$(ps x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/SSHPlus/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-5s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-5s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-10s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(printf '%-5s' "$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)")
swap1=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $2'})")
swap2=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $4'})")
swap3=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $3'})")
clear
echo -e "\033[1;31m╔══════════════════════════════════════════════════════════╗\033[0m"
echo -e "\033[1;31m║ \E[5;34;47m                 SSH-PLUS @SWITTECNOLOGIA                   \E[0m \033[1;31m║"
echo -e "\033[1;31m╠════════════════════╦═══════════════════╦═══════════════════╣\033[0m"
echo -e "\033[1;31m║  \033[1;32mSİSTEM           \033[1;31m║  \033[1;32mBELLEK RAM      \033[1;31m║ \033[1;32m İŞLEMCİ      \033[1;31m║"
echo -e "\033[1;31m║  \033[1;36mOS: \033[1;37m$_system    \033[1;31m║  \033[1;36mToplam:\033[1;37m$_ram \033[1;31m║  \033[1;36mÇekirdek: \033[1;37m$_core\033[0m   \033[1;31m║"
echo -e "\033[1;31m║  \033[1;36mSaat: \033[1;37m$_hora    \033[1;31m║  \033[1;36mKullanılıyor: \033[1;37m$_usor \033[1;31m║  \033[1;36mKullanılabilir: \033[1;37m$_usop\033[0m    \033[1;31m║"
echo -e "\033[1;31m╠════════════════════╬═══════════════════╬═══════════════════╣\033[0m"
echo -e "\033[1;31m║  \033[1;32mÇevrimiçi:\033[1;37m $_onlin    \033[1;31m║  \033[1;32mSüresi Dolan: \033[1;37m$_userexp \033[1;31m║  \033[1;32mToplam: \033[1;37m$_tuser     \033[1;31m║"
echo -e "\033[1;31m╠════════════════════╩═══════════════════╩═══════════════════╣\033[0m"
echo -e "\033[1;31m║  \033[1;32mSWAP BELLEK    \033[1;36mToplam: \033[1;37m$swap1  \033[1;36mKullanılıyor: \033[1;37m$swap3  \033[1;36mBoş: \033[1;37m$swap2 \033[1;31m║"
echo -e "\033[1;31m╠════════════════════════════════════════════════════════════╗\033[0m"
echo -e "\033[1;31m║   [\033[1;36m01\033[1;31m] \033[1;37m• \033[1;33mKULLANICI OLUŞTUR \033[1;31m            [\033[1;36m12\033[1;31m] \033[1;37m• \033[1;33mHIZ TESTİ  \033[1;31m      ║
\033[1;31m║   [\033[1;36m02\033[1;31m] \033[1;37m• \033[1;33mTEST KULLANICI OLUŞTUR \033[1;31m      [\033[1;36m13\033[1;31m] \033[1;37m• \033[1;33mBANNER  \033[1;31m         ║ 
\033[1;31m║   [\033[1;36m03\033[1;31m] \033[1;37m• \033[1;33mKULLANICIYI SİL \033[1;31m          [\033[1;36m14\033[1;31m] \033[1;37m• \033[1;33mTRAFİK  \033[1;31m        ║
\033[1;31m║   [\033[1;36m04\033[1;31m] \033[1;37m• \033[1;33mONLİNE KULLANICILARI İZLE \033[1;31m [\033[1;36m15\033[1;31m] \033[1;37m• \033[1;33mOPTİMİZE ET  \033[1;31m ║
\033[1;31m║   [\033[1;36m05\033[1;31m] \033[1;37m• \033[1;33mTARİH DEĞİŞTİR \033[1;31m             [\033[1;36m16\033[1;31m] \033[1;37m• \033[1;33mYEDEREK ET  \033[1;31m         ║
\033[1;31m║   [\033[1;36m06\033[1;31m] \033[1;37m• \033[1;33mSINIRI DEĞİŞTİR \033[1;31m            [\033[1;36m17\033[1;31m] \033[1;37m• \033[1;33mARAÇLAR  \033[1;31m║
\033[1;31m║   [\033[1;36m07\033[1;31m] \033[1;37m• \033[1;33mŞİFRE DEĞİŞTİR \033[1;31m               [\033[1;36m18\033[1;31m] \033[1;37m• \033[1;33mLİMİTÇI $stsl \033[1;31m  ║
\033[1;31m║   [\033[1;36m08\033[1;31m] \033[1;37m• \033[1;33mSÜRESİ DOLANLARI TEMİZLE \033[1;31m  [\033[1;36m19\033[1;31m] \033[1;37m• \033[1;33mBADVPN PRO $stsu\033[1;31m║
\033[1;31m║   [\033[1;36m09\033[1;31m] \033[1;37m• \033[1;33mKULLANICI RAPORU \033[1;31m          [\033[1;36m20\033[1;31m] \033[1;37m• \033[1;33mFIREWALL (PRO)  \033[1;31m ║
\033[1;31m║   [\033[1;36m10\033[1;31m] \033[1;37m• \033[1;33mBAĞLANTI MODU \033[1;31m            [\033[1;36m21\033[1;31m] \033[1;37m• \033[1;33mVPS BİLGİLERİ \033[1;31m>\033[1;33m>\033[1;32m>\033[0m \033[1;31m    ║
\033[1;31m║   [\033[1;36m11\033[1;31m] \033[1;37m• \033[1;33mSWAP OLUŞTUR \033[1;31m             [\033[1;36m22\033[1;31m] \033[1;37m• \033[1;33mCHECKUSER 4G  \033[1;31m   ║
\033[1;31m║   [\033[1;36m G \033[1;31m] \033[1;37m• \033[1;33mCHECKUSER GLTUNNEL \033[1;31m      [\033[1;36m23\033[1;31m] \033[1;37m• \033[1;33mDAHA FAZLA \033[1;31m>\033[1;33m>\033[1;32m>\033[0m \033[1;31m        ║"
echo -e "\033[1;31m╠══════════════════════════════════════════════════════════╝\033[0m"
echo -ne "\033[1;31m╚╣\033[1;32m BİR SEÇENEK BELİRTİN \033[1;33m:"; read x


case "$x" in 
   1 | 01)
   clear
   kullanici_olustur
   echo -ne "\n\033[1;31mGERİ DÖNMEK İÇİN \033[1;33mgiriş yapın \033[1;32mMENÜ!\033[0m"; read
   ;;
   2 | 02)
   clear
   test_kullanici_olustur
   echo -ne "\n\033[1;31mGERİ DÖNMEK İÇİN \033[1;33mgiriş yapın \033[1;32mMENÜ!\033[0m"; read
   ;;
   3 | 03)
   clear
   kullanici_sil
   sleep 3
   ;;
   4 | 04)
   clear
   ssh_izle
   echo -ne "\n\033[1;31mGERİ DÖNMEK İÇİN \033[1;33mgiriş yapın \033[1;32mMENÜ!\033[0m"; read
   ;;      
   5 | 05)
   clear
   tarih_degistir
   sleep 3
   ;;
   6 | 06)
   clear
   sinir_degistir
   sleep 3
   ;; 
   7 | 07)
   clear
   sifre_degistir
   sleep 3
   ;;
   8 | 08)
   clear
   zaman_asimi_temizleyici
   echo ""
   sleep 3
   ;;     
   9 | 09)
   clear
   kullanici_raporu
   echo -ne "\n\033[1;31mGERİ DÖNMEK İÇİN \033[1;33mgiriş yapın \033[1;32mMENÜ!\033[0m"; read
   ;;
   10)
   baglanti_modu
   exit;
   ;;
   11)
   swap_bellek
   ;;
   12)
   clear
   hiz
   echo -ne "\n\033[1;31mGERİ DÖNMEK İÇİN \033[1;33mgiriş yapın \033[1;32mMENÜ!\033[0m"; read
   ;;
   13)
   clear
   banner
   sleep 3
   ;;
   14)
   clear
   echo -e "\033[1;32mÇIKMAK İÇİN CTRL + C TIKLAYIN\033[1;36m"
   sleep 4
   nload
   ;;
   15)
   clear
   optimize_et
   echo -ne "\n\033[1;31mGERİ DÖNMEK İÇİN \033[1;33mgiriş yapın \033[1;32mMENÜ!\033[0m"; read
   ;;
   16)
   kullanici_yedekle
   echo -ne "\n\033[1;31mGERİ DÖNMEK İÇİN \033[1;33mgiriş yapın \033[1;32mMENÜ!\033[0m"; read
   ;;
   17)
   clear
   araclar
   ;;
   18)
   ssh_limit
   ;;
   19)
   clear
   badvpn
   exit;
   ;;
   20)
   fr
   ;;
   21)
   clear
   detaylar
   echo -ne "\n\033[1;31mGERİ DÖNMEK İÇİN \033[1;33mgiriş yapın \033[1;32mMENÜ!\033[0m"; read
   ;;
   22)
   initkontrol
   ;;
   23)
   menu2
   ;;
   g)
   gltunnel
   ;;
   *)
   echo -e "\n\033[1;31mGeçersiz seçenek !\033[0m"
   sleep 2
esac
done
}
menu
#son
